{
   "_id": "_design/projections",
   "language": "javascript",
   "views": {
       "annotations": {
           "map": "function(doc) {    if(doc.couchTypes.indexOf('annotation')!=-1)      emit(doc._id, doc);   }"
       },
       "annotations-tracks": {
           "map": "function(doc) {    if (doc.couchTypes.indexOf('annotations-track')!=-1)      emit(doc._id, doc);   }"
       },
       "annotations-relations": {
           "map": "function(doc) {    if (doc.couchTypes.indexOf('annotations-relation')!=-1)  emit(doc._id, doc); }"
       },
       "annotations-types": {
           "map": "function(doc) {    if (doc.couchTypes.indexOf('annotations-type')!=-1)  emit(doc._id, doc); }"
       },
       "annotations-relations-types": {
           "map": "function(doc) {    if (doc.couchTypes.indexOf('annotations-relations-type')!=-1)  emit(doc._id, doc); }"
       }
   },
   "lists": {
       "per_user_and_music": "function(head, req) {     var row;    var response = [];    var musicId = req.query.musicId;    var username = req.userCtx.name;    start({'headers': { 'Content-Type': 'application/json' } });    while(row = getRow()) {      var doc = row.value;     if(doc.user==username && doc.musicId==musicId)      response.push(doc);    }    send(toJSON(response));  }", 

       "per_user_and_annotations_track" : "function(head, req) { var row; var response = []; var trackId = req.query.trackId; var username = req.userCtx.name; start({'headers': { 'Content-Type': 'application/json' } }); while(row = getRow()) {  var doc = row.value;  if(doc.user==username && doc.trackId==trackId)   response.push(doc); } send(toJSON(response));}"
   }
}